// FLEXBOX



@mixin flexbox {
  // for each breakpoint
  @each $size in $breakpoint-classes {
    // write a mediaquery
    @include breakpoint($size) {
      // mediaquery specific
      @if $size != $-zf-zero-breakpoint {
        $bpLetter: str-slice($size, 1, 1);

        .flex-#{$bpLetter}        { display: flex; }
        .inline-flex-#{$bpLetter} { display: inline-flex; }

        .flex-auto-#{$bpLetter} {
          flex: 1 1 auto;
          min-width: 0; /* 1 */
          min-height: 0; /* 1 */
        }
        .flex-none-#{$bpLetter}             { flex: none; }
        .flex-column-#{$bpLetter}           { flex-direction: column; }
        .flex-row-#{$bpLetter}              { flex-direction: row; }
        .flex-wrap-#{$bpLetter}             { flex-wrap: wrap; }
        .flex-nowrap-#{$bpLetter}           { flex-wrap: nowrap; }
        .flex-wrap-reverse-#{$bpLetter}     { flex-wrap: wrap-reverse; }
        .flex-column-reverse-#{$bpLetter}   { flex-direction: column-reverse; }
        .flex-row-reverse-#{$bpLetter}      { flex-direction: row-reverse; }
        .items-start-#{$bpLetter}           { align-items: flex-start; }
        .items-end-#{$bpLetter}             { align-items: flex-end; }
        .items-center-#{$bpLetter}          { align-items: center; }
        .items-baseline-#{$bpLetter}        { align-items: baseline; }
        .items-stretch-#{$bpLetter}         { align-items: stretch; }

        .self-start-#{$bpLetter}            { align-self: flex-start; }
        .self-end-#{$bpLetter}              { align-self: flex-end; }
        .self-center-#{$bpLetter}           { align-self: center; }
        .self-baseline-#{$bpLetter}         { align-self: baseline; }
        .self-stretch-#{$bpLetter}          { align-self: stretch; }

        .justify-start-#{$bpLetter}         { justify-content: flex-start; }
        .justify-end-#{$bpLetter}           { justify-content: flex-end; }
        .justify-center-#{$bpLetter}        { justify-content: center; }
        .justify-between-#{$bpLetter}       { justify-content: space-between; }
        .justify-around-#{$bpLetter}        { justify-content: space-around; }

        .content-start-#{$bpLetter}         { align-content: flex-start; }
        .content-end-#{$bpLetter}           { align-content: flex-end; }
        .content-center-#{$bpLetter}        { align-content: center; }
        .content-between-#{$bpLetter}       { align-content: space-between; }
        .content-around-#{$bpLetter}        { align-content: space-around; }
        .content-stretch-#{$bpLetter}       { align-content: stretch; }

        .order-0-#{$bpLetter}     { order: 0; }
        .order-1-#{$bpLetter}     { order: 1; }
        .order-2-#{$bpLetter}     { order: 2; }
        .order-3-#{$bpLetter}     { order: 3; }
        .order-4-#{$bpLetter}     { order: 4; }
        .order-5-#{$bpLetter}     { order: 5; }
        .order-6-#{$bpLetter}     { order: 6; }
        .order-7-#{$bpLetter}     { order: 7; }
        .order-8-#{$bpLetter}     { order: 8; }
        .order-last-#{$bpLetter}  { order: 99999; }

        .flex-grow-0-#{$bpLetter} { flex-grow: 0; }
        .flex-grow-1-#{$bpLetter} { flex-grow: 1; }

        .flex-shrink-0-#{$bpLetter} { flex-shrink: 0; }
        .flex-shrink-1-#{$bpLetter} { flex-shrink: 1; }
      }
      // default, mobile styles
      @else {
        .flex { display: flex; }
        .inline-flex { display: inline-flex; }

        /* 1. Fix for Chrome 44 bug.
         * https://code.google.com/p/chromium/issues/detail?id=506893 */
        .flex-auto {
          flex: 1 1 auto;
          min-width: 0; /* 1 */
          min-height: 0; /* 1 */
        }

        .flex-none { flex: none; }

        .flex-column  { flex-direction: column; }
        .flex-row     { flex-direction: row; }
        .flex-wrap    { flex-wrap: wrap; }
        .flex-nowrap    { flex-wrap: nowrap; }
        .flex-wrap-reverse    { flex-wrap: wrap-reverse; }
        .flex-column-reverse  { flex-direction: column-reverse; }
        .flex-row-reverse     { flex-direction: row-reverse; }

        .items-start    { align-items: flex-start; }
        .items-end      { align-items: flex-end; }
        .items-center   { align-items: center; }
        .items-baseline { align-items: baseline; }
        .items-stretch  { align-items: stretch; }

        .self-start    { align-self: flex-start; }
        .self-end      { align-self: flex-end; }
        .self-center   { align-self: center; }
        .self-baseline { align-self: baseline; }
        .self-stretch  { align-self: stretch; }

        .justify-start   { justify-content: flex-start; }
        .justify-end     { justify-content: flex-end; }
        .justify-center  { justify-content: center; }
        .justify-between { justify-content: space-between; }
        .justify-around  { justify-content: space-around; }

        .content-start   { align-content: flex-start; }
        .content-end     { align-content: flex-end; }
        .content-center  { align-content: center; }
        .content-between { align-content: space-between; }
        .content-around  { align-content: space-around; }
        .content-stretch { align-content: stretch; }

        .order-0 { order: 0; }
        .order-1 { order: 1; }
        .order-2 { order: 2; }
        .order-3 { order: 3; }
        .order-4 { order: 4; }
        .order-5 { order: 5; }
        .order-6 { order: 6; }
        .order-7 { order: 7; }
        .order-8 { order: 8; }
        .order-last { order: 99999; }

        .flex-grow-0 { flex-grow: 0; }
        .flex-grow-1 { flex-grow: 1; }

        .flex-shrink-0 { flex-shrink: 0; }
        .flex-shrink-1 { flex-shrink: 1; }
      }
    }
  }
}
